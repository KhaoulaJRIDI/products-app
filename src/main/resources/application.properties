server.port=8081
spring.datasource.url=jdbc:h2:mem:products-db
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/my-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs


spring.security.oauth2.client.registration.keycloak.client-id=products-app
#spring.security.oauth2.client.registration.keycloak.client-secret=YOUR_KEYCLOAK_CLIENT_SECRET
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code#
#spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/my-realm
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code



jwt.auth.converter.resource-id=products-app
jwt.auth.converter.principle-attribute=preferred_username
keycloak.principal-attribute=name

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
#spring.thymeleaf.enabled=false


keycloak.public-client=true
keycloak.ssl-required=none
#keycloak.bearer-only=true pour les applications FrontEnd aucune redirection est demandée
#keycloak.credentials.secret=your-client-secret
spring.h2.console.enabled=true

keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/secured


logging.level.org.springframework.security=DEBUG
logging.level.org.keycloak=DEBUG